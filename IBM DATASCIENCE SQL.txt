


Part 1
Code sql on ORACLE 18c

SELECT COUNT(*)   /*so that I     could get all the details numbers of count in the table */
FROM customers;

i. Attribute table = 10000 ii. Business table = 10000 iii. Category table = 10000 iv. Checking table = 10000
v. elite_years table = 10000 vi. friend table = 10000
vii. hours table = 10000 viii. photo table = 10000 
ix. review table = 10000 x. tip table = 10000
xi. user table = 10000

2.
Code on oracle 18c.  : 
SELECT COUNT(DISTINCT Keys) FROM table; /* count to count the number and Distinct is for not repete the counting of the same againg and again. 


i. Business = id: 10000
ii. Hours = business_id: 1562
iii. Category = business_id: 2643 iv. Attribute = business_id: 1115
v. Review = id: 10000, business_id: 8090, user_id: 9581 vi. Checkin = business_id: 493
vii. Photo = id: 10000, photo: 6493
viii. Tip = user_id: 537, business_id: 3979 ix. User = id: 10000
x. Friend = user_id: 11
xi. Elite_years = user_id: 2780







3. 
Answer: NO 



I run the code on the MS SQL SERVER to the result ‘NO’
: SELECT COUNT(*)
FROM user
WHERE id IS NULL OR name IS NULL
OR review_count IS NULL OR yelping_since IS NULL OR useful IS NULL
OR funny IS NULL OR cool IS NULL
OR fans IS NULL
OR average_stars IS NULL OR compliment_hot IS NULL OR compliment_more IS NULL
OR compliment_profile IS NULL OR compliment_cute IS NULL
OR compliment_list IS NULL OR compliment_note IS NULL OR compliment_plain IS NULL OR compliment_cool IS NULL OR compliment_funny IS NULL
OR compliment_writer IS NULL OR compliment_photos IS NULL






















4. 
When I run the code on MS SQL SERVER I got he answers. 
The code for the solution is
SELECT MIN(Column),MAX(Column),AVG(Column) FROM table/* the table have min and max of the column ant the columns answer are being written in the table format. */
	


Find the minimum, maximum, and average values.
The learner's answers should reflect the following correct answers:
i. Table: Review, Column: Stars
min: 1 max: 5 avg: 3.7082 (okay if rounded)
ii. Table: Business, Column: Stars
min: 1 max: 5 avg: 3.6549 (okay if rounded)
iii. Table: Tip, Column: Likes
min: 0 max: 2 avg: 0.0144 (okay if rounded)
iv. Table: Checkin, Column: Count
min: 1 max: 53 avg: 1.9414 (okay if rounded)
v. Table: User, Column: Review_count
min: 0 max: 2000 avg: 24.2995 (okay if rounded)
5. 

When I run the code on MS SQL SERVER on the Yelp data base then bought opened with MS excel and put a screen shot of the excel file to the word. 
SQL code used to arrive at answer:
SELECT city,SUM(review_count) AS NUM FROM business
GROUP BY city
ORDER BY NUM DESC

City. with. Number. of. Reviews.
List. each. city. with. a. total. number. of. reviews. displaying. the. cities. with. the. most. reviews. first.
The. learner. provides. the. SQL. code. used. along. with. the. correct. results. which. should. be. the. following:
 

 


362  total  rows  shown









6. 

i. Avon
This is the code which I run on MS SQL SERVER. The results I have open with excel. And the screen short is added to the document. 
SQL code used to arrive at answer:
SELECT SUM(review_count) AS Numbers, stars
FROM business






WHERE city == "Avon" GROUP BY stars

ii. Beachwood

SQL code used to arrive at answer:
SELECT SUM(review_count) AS Numbers, stars
FROM business
WHERE city == "Beachwood" GROUP BY stars



| 
















7.

SQL code: 
SELECT review_count, 
name
FROM user
ORDER BY review_count DESC LIMIT 3



 








8.
SQL CODE
SELECT name,
review_count,
fans 
FROM user
ORDER BY fans DESC

Yuri have 76 fans. Amy has 609 reviews. 











10000 rows.. 










9. 
SQL CODE : 
SELECT COUNT(*)
FROM review
WHERE text LIKE "%love%"


SELECT COUNT(*) FROM review
WHERE text LIKE “%hate%”




 Yes , there are     	1780 for love and  	232  	for 	hate reviews


10. Sql CODE
SELECT name,fans
FROM user
ORDER BY fans DESC LIMIT 10











10  rows.. 





Part 2:
i.	


SQL code


 SELECT

business.name

business.time as open-close-time

, business.city

, category.category

, business.stars as start 

,hours.hours, 
business.review_count 
as Day, 
business.address, business.postal_code
FROM (business INNER JOIN category ON business.id =category.business_id) INNER JOIN hours ON hours.business_id =
business.id
WHERE business.city = 'Toronto' AND category.category = "Food" GROUP BY business.stars;




1.	





i.	According to the data driven from the database what we can see that is in Toronto all the three restaurants are open in Saturday 8am to 2 pm in night. 

ii.	 According to the table in the above what we can see is 2.5 stared review restaurants are very less. 










2 SQL code:
 SELECT
AVG(b.stars)as Average ,SUM(b.review_count)as total ,AVG(b.review_count)as avg-total ,COUNT(r.use ful)+COUNT(r.funny),is_open
FROM business b INNER JOIN review r ON b.id = r.id
GROUP BY b.is_open as open-till 

 


i. Difference 1:
according to the resulting table the top review restaurant kept open till 1 am. An the other one have very bad review. 
ii. Difference 2:
useful and funny , more are useful than the funny. 
Results:


3.
SELECT c.category,COUNT(b.name) AS
Number_Of_Resturants,AVG(stars),AVG(review_count),b.city
FROM (business b INNER JOIN hours h ON b.id = h.business_id) INNER JOIN category c ON c.business_id = b.id
WHERE c.category IN ("Chinese","Mexican","French","Italian","Korean","Japanese","Ind ian")
GROUP BY c.category
ORDER BY AVG(stars) DESC



 

















i.	Preferences have been portrayed in the table form of the restaurants. 
.

ii.	The table is giving a clear picture about the resturants business stargy in the places. There are different kinds of resutrents are there some are Mexican, French, Chinese etc. 


---------------------------------------------------------------------------------------









Part 1, Question 1: Total Number of Records.
 10,000. I.e. the answer should look similar to the following:
1.	Attribute = 10,000 records
2.	Business = 10,000 records
3.	Category = 10,000 records
4.	Checkin = 10,000 records
5.	elite_years = 10,000 records
6.	friend = 10,000 records
7.	hours = 10,000 records
8.	photo = 10,000 records
9.	review = 10,000 records
10.	tip = 10,000 records
11.	user = 10,000 records
 
Question 2: 
1.	Business = 10,000
2.	Hours = 1562
3.	Category = 2643
4.	Attribute = 1115
5.	Review = 10,000
6.	Checkin = 493
7.	Photo = 10,000
8.	Tip = 537 (specify which foreign key)
9.	User = 10,000
10.	Friend = 11
11.	Elite_years = 2780 
Part 1, Question 3: Null values in Users table?
The answer should be "no." There are no null values for this table. The
Part 1, Question 4: Find the minimum, maximum, and average values.
The learner's answers should reflect the following correct answers:
i. Table: Review, Column: Stars
min: 1 max: 5 avg: 3.7082 (okay if rounded)
ii. Table: Business, Column: Stars
min: 1 max: 5 avg: 3.6549 (okay if rounded)
iii. Table: Tip, Column: Likes
min: 0 max: 2 avg: 0.0144 (okay if rounded)
iv. Table: Checkin, Column: Count
min: 1 max: 53 avg: 1.9414 (okay if rounded)
v. Table: User, Column: Review_count
min: 0 max: 2000 avg: 24.2995 (okay if rounded)
Part 1, Question 5: City with Number of Reviews
List each city with a total number of reviews, displaying the cities with the most reviews first.
The learner provides the SQL code used along with the correct results which should be the following:
 
The learner provides the SQL code used and the results, but both are incorrect; or the answers are completely missing.
Part 1, Question 6: Distribution of Star Ratings
The learner should include both the SQL code to arrive at their answers for both Avon and Beachwood, and those answers should be in the form of the following distribution tables:
1.	Avon
Star Rating	Count
0	0
1	0
1.5	1
2	0
2.5	2
3	0
3.5	3
4	2
4.5	1
5	1
2.	Beachwood
Star Rating	Count
0	0
1	0
1.5	0
2	1
2.5	1
3	2
3.5	2
4	1
4.5	2
5	5
 
Part 1, Question 7: Top 3 users
The learner provided the code used to get their answer and the top 3 users should appear in the following order in their results:
•	Gerald, 2000
•	Sara, 1629
•	Yuri, 1339
 
Part 1, Question 8: Review/Fan Correlation
The learner attempts to answer the question based on their findings. It doesn't matter whether the interpretation appears to make sense based on the data or not.
Part 1, Question 9: Love or Hate
The learner should provide the following answer as well as providing the SQL code they used to get there:
There are more reviews with the word love in them than the word hate.
The learner answered incorrectly (indicating "hate" rather than "love").
Part 1, Question10: Top 10 users with most fans
The learner provided the code used to get their answer and the top 10 users should appear in the following order in their results:
1.	Amy, 503
2.	Mimi, 497
3.	Harald, 311
4.	Gerald, 253
5.	Christine, 173
6.	Lisa, 159
7.	Cat, 133
8.	William, 126
9.	Fran, 124
10.	Lissa, 120



